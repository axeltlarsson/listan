# Used in production
# It adds the app and db to a new isolated network: backend

services:
  app:
    environment:
      DB_URL: "jdbc:postgresql://db:5432/listan"
    restart: unless-stopped
    networks:
      - backend
      - frontend
  prod-console:
    # This is a temporary service to run the console in production
    environment:
      DB_URL: "jdbc:postgresql://db:5432/listan"
    build:
      context: .
      dockerfile: Dockerfile.dev
    tty: true
    entrypoint: ["sbt", "-Dconfig.resource=prod.conf"]
    command: compile
    volumes:
      - .:/app
  frontend:
    build:
      args:
        WS_API_URL: "api/ws"
        LOGIN_URL: "https://${VIRTUAL_HOST}/api/login"
    environment:
      VIRTUAL_HOST: "${VIRTUAL_HOST}"
      LETSENCRYPT_HOST: "${VIRTUAL_HOST}"
      LETSENCRYPT_EMAIL: "${EMAIL}"
    restart: unless-stopped
    networks:
      - frontend
      - webproxy
  db:
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped
    volumes:
      - db-volume:/var/lib/postgresql/data
    networks:
      - backend

volumes:
  db-volume:
networks:
  backend:
  frontend:
  webproxy:
    external: true

